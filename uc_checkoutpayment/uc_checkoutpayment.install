<?php

/**
 * @file
 * Checkout.com integration module.
 *
 * This module provides Checkout.com payment gateway integration to Ubercart,
 * Ubercart Checkoutpayment offers a PCI-compliant way to process payments.
 */

/**
 * Implements hook_schema().
 */
function uc_checkoutpayment_schema() {
  $schema = array();

  $schema['uc_checkoutpayment_hub_communication'] = array(
    'description' => 'Logs charge details.',
    'fields' => array(
      'id' => array(
        'description' => 'String of characters that uniquely identifies the transaction.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'UTC date and time based on ISO 8601 profile.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'track_id' => array(
        'description' => 'Order tracking id generated by the merchant.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
      ),
      'transaction_indicator' => array(
        'description' => 'Transaction indicator 1 for regular, 2 for recurring, and 3 for MOTO.',
        'type' => 'int',
        'default' => 0,
      ),
      'email' => array(
        'description' => 'The email address of the customer.',
        'type' => 'varchar',
        'length' => '50',
      ),
      'value' => array(
        'description' => 'A non-zero positive integer (i.e. decimal figures not allowed).',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'currency' => array(
        'description' => 'Three-letter ISO currency code representing the currency of the charge.',
        'type' => 'varchar',
        'length' => '3',
        'not null' => TRUE,
      ),
      'responseMessage' => array(
        'description' => 'Shows Approved or Declined based on response code of the transaction.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
      ),
      'responseCode' => array(
        'description' => 'Status of the charge.(e.g 10000 equivalent to approved)',
        'type' => 'varchar',
        'length' => '6',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'A response code indicating the status of the request.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function uc_checkoutpayment_install() {
  db_insert('uc_order_statuses')
    ->fields(array(
      'order_status_id' => 'cko_authorised',
      'title' => 'Authorised',
      'state' => 'post_checkout',
      'weight' => 6,
      'locked' => 1,
    ))
    ->execute();

  db_insert('uc_order_statuses')
    ->fields(array(
      'order_status_id' => 'cko_part_captured',
      'title' => 'Partial payment received',
      'state' => 'payment_received',
      'weight' => 9,
      'locked' => 1,
    ))
    ->execute();

  db_insert('uc_order_statuses')
    ->fields(array(
      'order_status_id' => 'cko_refunded',
      'title' => 'Refunded',
      'state' => 'canceled',
      'weight' => 12,
      'locked' => 1,
    ))
    ->execute();

  db_insert('uc_order_statuses')
    ->fields(array(
      'order_status_id' => 'cko_part_refunded',
      'title' => 'Partially refunded',
      'state' => 'payment_received',
      'weight' => 11,
      'locked' => 1,
    ))
    ->execute();

  db_insert('uc_order_statuses')
    ->fields(array(
      'order_status_id' => 'cko_flagged',
      'title' => 'Authorised and Flagged',
      'state' => 'post_checkout',
      'weight' => 7,
      'locked' => 1,
    ))
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function uc_checkoutpayment_uninstall() {
  db_delete('uc_order_statuses')
    ->condition('order_status_id', 'cko_%', 'LIKE')
    ->execute();

  db_delete('variable')
    ->condition('name', 'cko_%', 'LIKE')
    ->execute();
  cache_clear_all('variables', 'cache_bootstrap');
}
